<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
	 http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd"
       default-autowire="byType">


    <!-- Annotation Config -->
    <context:annotation-config/>

    <!-- ***************资源文件**************-->


    <!--***************配置数据源************** -->

    <context:property-placeholder ignore-unresolvable="true" location="classpath:dbconfig.properties"/>
    <!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>

        <!-- 基本属性 url、user、password -->
        <!--<property name="url" value="jdbc:mysql://172.16.18.45:3306/daily"/>-->
        <property name="url" value="jdbc:mysql://172.16.18.88:3306/daily"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="${jdbc.testSql}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>


    <!-- 扫描Service -->
    <context:component-scan base-package="com.hbsd.service.*"/>
    <context:component-scan base-package="com.hbsd.mapper.*" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"></context:include-filter>
    </context:component-scan>


    <!-- 定义目标bean和bean中的方法 -->


    <!-- <bean id="dataSourceC"
        class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <bean class="org.logicalcobwebs.proxool.ProxoolDataSource">
                <property name="driver" value="com.mysql.jdbc.Driver" />
                <property name="driverUrl" value="jdbc:mysql://172.16.18.31:3306/daily" />
                <property name="driverUrl" value="jdbc:mysql://172.16.10.31:3306/hbsd"
                    />
                <property name="user" value="root" />
                <property name="password" value="root" />
                <property name="maximumConnectionCount" value="10" />
                <property name="minimumConnectionCount" value="5" />
                <property name="statistics" value="1m,15m,1h,1d" />
                <property name="simultaneousBuildThrottle" value="30" />
                <property name="trace" value="false" />
            </bean>
        </property>
    </bean> -->


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>


    <!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"> <value>com.mysql.jdbc.Driver</value> </property>
        <property name="url"> <value>jdbc:mysql://127.0.0.1:3306/hbsd?useUnicode=true&amp;charaterEncoding=utf-8
        </value> </property> <property name="username"> <value>root</value> </property>
        <property name="password"> <value>root</value> </property> </bean> -->


    <!-- ***************事务配置************** -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <aop:config>
        <aop:advisor pointcut="execution(* com.hbsd.service.*..*(..))"
                     advice-ref="txAdvice"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" isolation="READ_COMMITTED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 扫描mapper.java -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          autowire="byName">
        <property name="basePackage" value="com.hbsd.mapper.*"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- Spring 工具类 -->
    <bean id="springContextUtil" class="com.hbsd.utils.SpringContextUtil"/>

    <!-- 支持上传文件 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

</beans>

